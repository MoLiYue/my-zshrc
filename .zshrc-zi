# ---------------------------
# System Proxy Settings (Uncomment if needed)
# export ALL_PROXY=127.0.0.1:7890
# export HTTP_PROXY=192.168.0.108:8899
# export HTTPS_PROXY=192.168.0.108:8899
# export SOCKS5_PROXY=192.168.0.108:9988
# ---------------------------

#############################
# Zi Plugin Manager Basic Setup
#############################
typeset -A ZI
ZI[BIN_DIR]="${HOME}/.zi/bin"
source "${ZI[BIN_DIR]}/zi.zsh"

# Enable autocompletion for zi commands
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi

#############################
# Powerlevel10k Theme Setup
#############################
# Enable Powerlevel10k instant prompt for faster startup (keep near top of config)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Load powerlevel10k using shallow clone for speed (depth=1)
zi ice depth=1
zi light romkatv/powerlevel10k

# Source user custom powerlevel10k config if it exists
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

#############################
# Common Zsh Plugin Configuration
#############################
# Standard plugins
zi light z-shell/H-S-MW
zi light zsh-users/zsh-completions
zi light zdharma/fast-syntax-highlighting
# Alternatively, you can use the official syntax highlighting:
# zi light zsh-users/zsh-syntax-highlighting
zi light zsh-users/zsh-autosuggestions

# exa is no longer maintained; using eza as a replacement
# zi light DarrinTisdale/zsh-aliases-exa  # Deprecated exa version
zi light z-shell/zsh-eza

# Optional plugin (e.g., fzf-tab can be enabled if desired)
# zi light Aloxaf/fzf-tab

#############################
# Oh My Zsh Snippets Loading
#############################
# Load commonly used snippets from Oh My Zsh

# Load Git library snippet then the Git plugin
zi snippet OMZL::git.zsh
zi snippet OMZP::git
zi snippet OMZP::urltools

# Clear completions loaded so far to prevent conflicts
zi cdclear -q

# Load additional common snippets
zi snippet OMZL::clipboard.zsh         # Clipboard management
zi snippet OMZL::completion.zsh          # Command completions
zi snippet OMZL::history.zsh             # Command history
zi snippet OMZL::key-bindings.zsh        # Key bindings
zi snippet OMZL::theme-and-appearance.zsh  # Theme and appearance
zi snippet OMZL::functions.zsh           # Common functions
zi snippet OMZL::termsupport.zsh         # Terminal support

# Load Oh My Zsh plugins as snippets
zi snippet OMZP::dotenv
zi snippet OMZP::rake
zi snippet OMZP::rbenv
zi snippet OMZP::ruby
zi snippet OMZP::autojump
zi snippet OMZP::pip
zi snippet OMZP::sublime
zi snippet OMZP::sudo
zi snippet OMZP::rails
zi snippet OMZP::textmate
zi snippet OMZP::lighthouse
zi snippet OMZP::gitignore
zi snippet OMZP::colored-man-pages
zi snippet OMZP::cp
zi snippet OMZP::brew
zi snippet OMZP::npm
# If needed, you can enable tmux related snippet:
# zi snippet OMZP::tmux

# Custom aliases and tools
alias ra='ranger'
eval "$(thefuck --alias)"

#############################
# Specific Configuration Based on OS
#############################
os=$(uname)

if [[ $os == "Darwin" ]]; then
  # macOS specific settings
  export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk-18.0.2.jdk/Contents/Home"
  # Uncomment the following line if using an older Node version:
  # export PATH="/opt/homebrew/Cellar/node@16/bin:$PATH"
  export PATH="/opt/homebrew/Cellar/node/21.7.1/bin:$PATH"
  export EDITOR="/opt/homebrew/bin/nvim"
elif [[ $os == "Linux" ]]; then
  # Linux specific settings (add your Linux configurations here)
  :
fi
